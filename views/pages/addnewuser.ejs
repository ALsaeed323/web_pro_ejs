<div class="small-container container">
<<<<<<< HEAD
    <h3 class="my-3">Create New Account for User</h3>
    <form id="signinForm" onsubmit="signinHandler(event)">
        <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <input type="text" class="form-control" id="signinName" required placeholder="Enter Name">
            <span id="nameErrorMessage" class="error-message"></span>
        </div>
        <div class="mb-3">
            <label for="email" class="form-label">Email Address</label>
            <input type="email" class="form-control" id="signinEmail" required placeholder="Enter email">
            <span id="emailErrorMessage" class="error-message"></span>
        </div>
        <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="signinPassword" required placeholder="Enter Password">
            <span id="passwordErrorMessage" class="error-message"></span>
        </div>
        <div class="mb-3">
            <label for="confirmPassword" class="form-label">Confirm Password</label>
            <input type="password" class="form-control" id="signinConfirmPassword" required
                placeholder="Confirm Password">
            <span id="confirmPasswordErrorMessage" class="error-message"></span>
        </div>
        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Create</button>
        </div>
    </form>
</div>


<!-- <script>
    function signinHandler(event)
 </script> -->
<script>
    function signinHandler(event) {
        event.preventDefault(); // Prevent form submission for now
        // Validate form inputs
        var nameInput = document.getElementById('signinName');
        var emailInput = document.getElementById('signinEmail');
        var passwordInput = document.getElementById('signinPassword');
        var confirmPasswordInput = document.getElementById('signinConfirmPassword');
        var nameErrorMessage = document.getElementById('nameErrorMessage');
        var emailErrorMessage = document.getElementById('emailErrorMessage');
        var passwordErrorMessage = document.getElementById('passwordErrorMessage');
        var confirmPasswordErrorMessage = document.getElementById('confirmPasswordErrorMessage');
        // Validate name
        if (nameInput.value.trim() === '') {
            nameErrorMessage.textContent = 'Please enter your name.';
        } else {
            nameErrorMessage.textContent = '';
        }
        // Validate email
        var emailRegex = /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/;
        if (!emailRegex.test(emailInput.value)) {
            emailErrorMessage.textContent = 'Please enter a valid email address.';
        } else {
            emailErrorMessage.textContent = '';
        }
        // Validate password
        if (passwordInput.value.length < 8) {
            passwordErrorMessage.textContent = 'Password must be at least 8 characters long.';
        } else {
            passwordErrorMessage.textContent = '';
        }
        // Validate confirm password
        if (passwordInput.value !== confirmPasswordInput.value) {
            confirmPasswordErrorMessage.textContent = 'Passwords do not match.';
        } else {
            confirmPasswordErrorMessage.textContent = '';
        }
        // Check if any error messages are displayed
        if (nameErrorMessage.textContent || emailErrorMessage.textContent || passwordErrorMessage.textContent || confirmPasswordErrorMessage.textContent) {
            return; // Do not submit the form if there are errors
        }
        // If all inputs are valid, submit the form
        // You can add your code here to perform the actual form submission
        // alert('Form submitted successfully!');
    }
=======
  <h3 class="my-3">Create New Account for User</h3>
  <form id="signupForm" method="POST" action="/admin/user">
      <div class="mb-3">
          <label for="name" class="form-label">Name</label>
          <input type="text" class="form-control" id="signupName" name="name" required placeholder="Enter Name">
          <span id="nameErrorMessage" class="error-message"></span>
      </div>
      <div class="mb-3">
          <label for="email" class="form-label">Email Address</label>
          <input type="email" class="form-control" id="signupEmail" name="email" required placeholder="Enter email">
          <span id="emailErrorMessage" class="error-message"></span>
      </div>
      <div class="mb-3">
          <label for="password" class="form-label">Password</label>
          <input type="password" class="form-control" id="signupPassword" name="password" required placeholder="Enter Password">
          <span id="passwordErrorMessage" class="error-message"></span>
      </div>
      <div class="mb-3">
          <label for="confirmPassword" class="form-label">Confirm Password</label>
          <input type="password" class="form-control" id="signupConfirmPassword" required placeholder="Confirm Password">
          <span id="confirmPasswordErrorMessage" class="error-message"></span>
      </div>
      <div class="mb-3">
          <button type="submit" class="btn btn-primary">Create</button>
      </div>
  </form>
</div>
<script>
  const form = document.getElementById('signupForm');

form.addEventListener('submit', function(event) {
  event.preventDefault();
  
  const nameInput = document.getElementById('signupName');
  const emailInput = document.getElementById('signupEmail');
  const passwordInput = document.getElementById('signupPassword');
  const confirmPasswordInput = document.getElementById('signupConfirmPassword');

  const nameRegex = /^[A-Za-z]+$/;
  const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
  const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/;

  let isValid = true;

  // Validate name field
  if (!nameRegex.test(nameInput.value)) {
    document.getElementById('nameErrorMessage').textContent = 'Name must contain only alphabetical characters.';
    isValid = false;
  } else {
    document.getElementById('nameErrorMessage').textContent = '';
  }

  // Validate email field
  if (!emailRegex.test(emailInput.value)) {
    document.getElementById('emailErrorMessage').textContent = 'Invalid email address.';
    isValid = false;
  } else {
    document.getElementById('emailErrorMessage').textContent = '';
  }

  // Validate password field
  if (!passwordRegex.test(passwordInput.value)) {
    document.getElementById('passwordErrorMessage').textContent = 'Password must be at least 8 characters long and contain at least one letter and one digit.';
    isValid = false;
  } else {
    document.getElementById('passwordErrorMessage').textContent = '';
  }

  // Validate confirm password field
  if (passwordInput.value !== confirmPasswordInput.value) {
    document.getElementById('confirmPasswordErrorMessage').textContent = 'Passwords do not match.';
    isValid = false;
  } else {
    document.getElementById('confirmPasswordErrorMessage').textContent = '';
  }

  // Submit the form if all fields are valid
  if (isValid) {
    form.submit();
  }
});

// Add event listener to submit button
const submitButton = form.querySelector('button[type="submit"]');
submitButton.addEventListener('click', function(event) {
  form.dispatchEvent(new Event('submit'));
});


>>>>>>> a9526f8f7070e04200bbe084d73d2afaf06ee8de
</script>